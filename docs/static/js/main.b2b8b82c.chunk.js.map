{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","hooks/useFetchGifs.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","GifGridItem","url","title","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","useFetchGifs","loading","state","setState","useEffect","then","imgs","GifGrid","key","GifExpertApp","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6MAiCeA,EA9BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEHC,mBAAS,IAFN,mBAEhCC,EAFgC,KAEpBC,EAFoB,KAevC,OACI,0BAAMC,SAVW,SAAEC,GACnBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAmBO,OAC3CN,EAAc,OAMd,2BACIO,KAAK,OACLC,MAAQT,EACRU,SAhBc,SAAEP,GAAF,OAASF,EAAcE,EAAEQ,OAAOF,YCI/CG,EATK,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,IAAKC,EAAW,EAAXA,MACvB,OACI,yBAAKC,UAAU,4CACX,yBAAKC,IAAMH,EAAMI,IAAMH,IACvB,2BAAKA,K,uBCNJI,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbP,EAFa,iDAEoCQ,UAAUF,GAF9C,+DAGAG,MAAMT,GAHN,cAGbU,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRf,MAAOc,EAAId,MACXD,IAAG,UAAEe,EAAIE,cAAN,aAAE,EAAYC,iBAAiBlB,QAVvB,kBAcZa,GAdY,4CAAH,sDCwBLM,EApBM,SAAEb,GAAe,IAAD,EAEPpB,mBAAS,CAC/B0B,KAAM,GACNQ,SAAS,IAJoB,mBAE1BC,EAF0B,KAEnBC,EAFmB,KAiBjC,OAVAC,qBAAU,WACNlB,EAAQC,GACHkB,MAAK,SAAAC,GACEH,EAAS,CACLV,KAAMa,EACNL,SAAS,SAG1B,CAACd,IAEGe,GCQIK,EAzBC,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SAAe,EAECa,EAAab,GAAhCW,EAFkB,EAEvBL,KAAaQ,EAFU,EAEVA,QAGpB,OACI,oCACI,wBAAIlB,UAAU,qCAAsCI,GAElDc,GAAW,uBAAGlB,UAAU,oCAAb,eAEb,yBAAKA,UAAU,cAEPe,EAAOH,KAAK,SAACC,GAAD,OACR,kBAAC,EAAD,eACIY,IAAMZ,EAAIC,IACLD,UCMlBa,EAtBM,WAAO,IAAD,EACS1C,mBAAS,CAAC,aADnB,mBACpBQ,EADoB,KACRT,EADQ,KAKvB,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BAEA,4BAEQS,EAAWoB,KAAI,SAAAR,GAAQ,OACnB,kBAAC,EAAD,CAASqB,IAAMrB,EAAWA,SAAWA,UCX7DuB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.b2b8b82c.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = ( e ) => setInputValue(e.target.value);\r\n\r\n    const handleSubmit = ( e ) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2) {\r\n            setCategories(categories => [inputValue,...categories]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    );\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories : PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory;\r\n","import React from 'react';\r\n\r\nconst GifGridItem = ({url, title}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__bounceIn\">\r\n            <img src={ url } alt={ title } />\r\n            <p>{ title }</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GifGridItem;\r\n","export const getGifs = async(category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=j6fQ0u3oL8r7X8xWc9WXaOKYc8awBbbM`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n    \r\n    return gifs;\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\nconst useFetchGifs = ( category ) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    });\r\n            });\r\n    }, [category]);\r\n\r\n    return state;\r\n}\r\n\r\nexport default useFetchGifs;\r\n","import React from 'react';\r\nimport GifGridItem from './GifGridItem';\r\nimport useFetchGifs from '../hooks/useFetchGifs'\r\n\r\nconst GifGrid = ({ category }) => {\r\n    \r\n    const {data:images, loading} = useFetchGifs(category);\r\n    \r\n   \r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\r\n\r\n            { loading && <p className=\"animate__animated animate__flash\">Cargando...</p>}\r\n\r\n            <div className=\"card-grid \">\r\n                {\r\n                    images.map( (img) => ( \r\n                        <GifGridItem \r\n                            key={ img.id }\r\n                            { ...img }\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GifGrid;\r\n","import React, { useState } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\nconst [categories, setCategories] = useState(['Simpsons']);\r\n// const [categories, setCategories] = useState(['Simpsons', 'Hey Arnold!', 'La vaca y el pollito']);\r\n\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories }/>\r\n            <hr/>\r\n\r\n            <ol>\r\n                {\r\n                    categories.map(category => \r\n                        <GifGrid key={ category } category={ category }/>\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <GifExpertApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}